// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(LandContext))]
    [Migration("20250928123418_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Domain.Models.DataModels.LandData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Colors")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Lands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Colors = "[\"blue\",\"white\"]",
                            Name = "Tundra",
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("Domain.Models.LandType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("LandTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "True Dual",
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fetchland",
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Shockland",
                            Priority = 3
                        });
                });

            modelBuilder.Entity("Domain.Models.DataModels.LandData", b =>
                {
                    b.HasOne("Domain.Models.LandType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
